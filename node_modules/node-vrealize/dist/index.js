'use strict';

var _identity = require('./identity');

var _identity2 = _interopRequireDefault(_identity);

var _content = require('./vra/content');

var _content2 = _interopRequireDefault(_content);

var _catalog = require('./vra/catalog');

var _catalog2 = _interopRequireDefault(_catalog);

var _approval = require('./vra/approval');

var _approval2 = _interopRequireDefault(_approval);

var _actions = require('./vro/actions');

var _actions2 = _interopRequireDefault(_actions);

var _workflows = require('./vro/workflows');

var _workflows2 = _interopRequireDefault(_workflows);

var _configurations = require('./vro/configurations');

var _configurations2 = _interopRequireDefault(_configurations);

var _categories = require('./vro/categories');

var _categories2 = _interopRequireDefault(_categories);

var _resources = require('./vro/resources');

var _resources2 = _interopRequireDefault(_resources);

var _advancedDesigner = require('./vra/advancedDesigner');

var _advancedDesigner2 = _interopRequireDefault(_advancedDesigner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import configuration from './config'

function NodeVRealize() {
  this.config = {
    username: '',
    hostname: '',
    password: '',
    tenant: '',
    token: '',
    agent: ''
  };
  this.identity = {
    isTokenAuthorized: _identity2.default.isTokenAuthorized.bind(this),
    getTokenId: _identity2.default.getTokenId.bind(this)
  };
  this.vro = {};
  this.vra = {};
  this.vro.categories = {
    importOne: _categories2.default.importOne.bind(this),
    exportOne: _categories2.default.exportOne.bind(this),
    getFromCategoryType: _categories2.default.getFromCategoryType.bind(this),
    getCategoryIdFromAbsolutePath: _categories2.default.getCategoryIdFromAbsolutePath.bind(this),
    getOne: _categories2.default.getOne.bind(this),
    deleteOne: _categories2.default.deleteOne.bind(this),
    getLeafCategoryId: _categories2.default.getLeafCategoryId.bind(this)
  };
  this.vro.workflows = {
    importOne: _workflows2.default.importOne.bind(this),
    exportOne: _workflows2.default.exportOne.bind(this)
  };
  this.vro.actions = {
    importOne: _actions2.default.importOne.bind(this),
    exportToModuleName: _actions2.default.exportToModuleName.bind(this),
    importFromModuleName: _actions2.default.importFromModuleName.bind(this)
  };
  this.vro.configurations = {
    importOne: _configurations2.default.importOne.bind(this),
    exportOne: _configurations2.default.exportOne.bind(this)
  };
  this.vro.resources = {
    exportOne: _resources2.default.exportOne.bind(this)
  };
  this.vra.content = {
    getFromTenant: _content2.default.getFromTenant.bind(this),
    exportPackage: _content2.default.exportPackage.bind(this),
    createPackage: _content2.default.createPackage.bind(this),
    getPackageById: _content2.default.getPackageById.bind(this),
    deletePackage: _content2.default.deletePackage.bind(this)
  };
  this.vra.catalog = {
    getAllCatalogItems: _catalog2.default.getAllCatalogItems.bind(this),
    getCatalogItemByName: _catalog2.default.getCatalogItemByName.bind(this),
    getRequestsByCatalogItemName: _catalog2.default.getRequestsByCatalogItemName.bind(this),
    submitRequest: _catalog2.default.submitRequest.bind(this),
    sendRequestViaUrl: _catalog2.default.sendRequestViaUrl.bind(this),
    getRequest: _catalog2.default.getRequest.bind(this),
    getCatalogItemTemplate: _catalog2.default.getCatalogItemTemplate.bind(this),
    getResources: _catalog2.default.getResources.bind(this),
    getResourceByName: _catalog2.default.getResourceByName.bind(this),
    getResourceById: _catalog2.default.getResourceById.bind(this),
    getResourceActions: _catalog2.default.getResourceActions.bind(this),
    getResourceActionTemplate: _catalog2.default.getResourceActionTemplate.bind(this),
    getResourceActionRequests: _catalog2.default.getResourceActionRequests.bind(this),
    submitResourceAction: _catalog2.default.submitResourceAction.bind(this),
    getEntitlementByName: _catalog2.default.getEntitlementByName.bind(this),
    updateEntitlement: _catalog2.default.updateEntitlement.bind(this)
  };
  this.vra.approval = {
    getAllApprovalPolicies: _approval2.default.getAllApprovalPolicies.bind(this),
    getApprovalPolicyById: _approval2.default.getApprovalPolicyById.bind(this),
    createApprovalPolicy: _approval2.default.createApprovalPolicy.bind(this),
    updateApprovalPolicy: _approval2.default.updateApprovalPolicy.bind(this),
    getApprovalPolicyTypeByName: _approval2.default.getApprovalPolicyTypeByName.bind(this),
    deleteApprovalPolicy: _approval2.default.deleteApprovalPolicy.bind(this)
  };
  this.vra.advancedDesigner = {
    getAllSubscriptions: _advancedDesigner2.default.getAllSubscriptions.bind(this),
    getSubscriptionById: _advancedDesigner2.default.getSubscriptionById.bind(this),
    createSubscription: _advancedDesigner2.default.createSubscription.bind(this),
    deleteSubscription: _advancedDesigner2.default.deleteSubscription.bind(this)
  };
}

module.exports = NodeVRealize;
//# sourceMappingURL=index.js.map