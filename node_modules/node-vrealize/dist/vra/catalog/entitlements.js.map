{"version":3,"sources":["../../../src/vra/catalog/entitlements.js"],"names":["requestPromise","promisifyAll","require","module","exports","getEntitlementByName","updateEntitlement","entitlementName","_this","limit","resolve","reject","options","method","agent","config","url","hostname","headers","token","body","json","getAsync","then","response","statusCode","content","entitlements","i","length","entitlement","name","Error","catch","error","id","putAsync"],"mappings":";;AAAA;;;;;;AACA,IAAIA,iBAAiB,mBAAQC,YAAR,CAAqBC,QAAQ,SAAR,CAArB,CAArB;;AAEA;AACAC,OAAOC,OAAP,GAAiB;AACfC,wBAAsBA,oBADP;AAEfC,qBAAmBA;AAFJ,CAAjB;;AAKA,SAASD,oBAAT,CAA+BE,eAA/B,EAAgD;AAC9C,MAAIC,QAAQ,IAAZ;AACA,MAAIC,QAAQ,KAAZ;AACA,SAAO,uBAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,UAAU;AACZC,cAAQ,KADI;AAEZC,aAAON,MAAMO,MAAN,CAAaD,KAFR;AAGZE,wBAAgBR,MAAMO,MAAN,CAAaE,QAA7B,gDAAgFR,KAHpE;AAIZS,eAAS;AACP,yBAAiB,UADV;AAEP,wBAAgB,kBAFT;AAGP,qCAA2BV,MAAMO,MAAN,CAAaI;AAHjC,OAJG;AASZC,YAAM,EATM;AAUZC,YAAM;AAVM,KAAd;;AAaArB,mBAAesB,QAAf,CAAwBV,OAAxB,EACGW,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxB,UAAIA,SAASC,UAAT,KAAwB,GAA5B,EAAiC;AAC/B,eAAOd,OAAOa,SAASJ,IAAhB,CAAP;AACD;;AAED;AACA,UAAI,CAACI,SAASJ,IAAV,IAAkB,CAACI,SAASJ,IAAT,CAAcM,OAArC,EAA8C;AAC5C,eAAOhB,QAAQ,EAAR,CAAP;AACD;;AAED,UAAIiB,eAAeH,SAASJ,IAAT,CAAcM,OAAjC;;AAEA,WAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAID,aAAaE,MAAjC,EAAyCD,GAAzC,EAA8C;AAC5C,YAAIE,cAAcH,aAAaC,CAAb,CAAlB;AACA,YAAIE,YAAYC,IAAZ,KAAqBxB,eAAzB,EAA0C;AACxC,iBAAOG,QAAQoB,WAAR,CAAP;AACD;AACF;;AAEDnB,aAAO,IAAIqB,KAAJ,CAAU,iDAAiDzB,eAA3D,CAAP;AACD,KArBH,EAsBG0B,KAtBH,CAsBS,UAAUC,KAAV,EAAiB;AACtBvB,aAAOuB,KAAP;AACD,KAxBH;AAyBD,GAvCM,CAAP;AAwCD;;AAED,SAAS5B,iBAAT,CAA4B6B,EAA5B,EAAgCd,IAAhC,EAAsC;AACpC,MAAIb,QAAQ,IAAZ;;AAEA,SAAO,uBAAY,UAAUE,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,UAAU;AACZC,cAAQ,KADI;AAEZC,aAAON,MAAMO,MAAN,CAAaD,KAFR;AAGZE,wBAAgBR,MAAMO,MAAN,CAAaE,QAA7B,0CAA0EkB,EAH9D;AAIZjB,eAAS;AACP,yBAAiB,UADV;AAEP,wBAAgB,kBAFT;AAGP,qCAA2BV,MAAMO,MAAN,CAAaI;AAHjC,OAJG;AASZC,YAAMC,IATM;AAUZA,YAAM;AAVM,KAAd;;AAaArB,mBAAeoC,QAAf,CAAwBxB,OAAxB,EACGW,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxBd,cAAQc,QAAR;AACD,KAHH,EAIGS,KAJH,CAIS,UAAUC,KAAV,EAAiB;AACtBvB,aAAOuB,KAAP;AACD,KANH;AAOD,GArBM,CAAP;AAsBD","file":"entitlements.js","sourcesContent":["import Promise from 'bluebird'\nvar requestPromise = Promise.promisifyAll(require('request'))\n\n/* istanbul ignore next */\nmodule.exports = {\n  getEntitlementByName: getEntitlementByName,\n  updateEntitlement: updateEntitlement\n}\n\nfunction getEntitlementByName (entitlementName) {\n  var _this = this\n  var limit = 10000\n  return new Promise(function (resolve, reject) {\n    var options = {\n      method: 'GET',\n      agent: _this.config.agent,\n      url: `https://${_this.config.hostname}/catalog-service/api/entitlements?limit=${limit}`,\n      headers: {\n        'cache-control': 'no-cache',\n        'content-type': 'application/json',\n        'authorization': `Bearer ${_this.config.token}`\n      },\n      body: {},\n      json: true\n    }\n\n    requestPromise.getAsync(options)\n      .then(function (response) {\n        if (response.statusCode !== 200) {\n          return reject(response.body)\n        }\n\n        // could not find any requests with given name\n        if (!response.body || !response.body.content) {\n          return resolve([])\n        }\n\n        var entitlements = response.body.content\n\n        for (var i = 0; i < entitlements.length; i++) {\n          var entitlement = entitlements[i]\n          if (entitlement.name === entitlementName) {\n            return resolve(entitlement)\n          }\n        }\n\n        reject(new Error('Could not find the entitlement with the name' + entitlementName))\n      })\n      .catch(function (error) {\n        reject(error)\n      })\n  })\n}\n\nfunction updateEntitlement (id, json) {\n  var _this = this\n\n  return new Promise(function (resolve, reject) {\n    var options = {\n      method: 'PUT',\n      agent: _this.config.agent,\n      url: `https://${_this.config.hostname}/catalog-service/api/entitlements/${id}`,\n      headers: {\n        'cache-control': 'no-cache',\n        'content-type': 'application/json',\n        'authorization': `Bearer ${_this.config.token}`\n      },\n      body: json,\n      json: true\n    }\n\n    requestPromise.putAsync(options)\n      .then(function (response) {\n        resolve(response)\n      })\n      .catch(function (error) {\n        reject(error)\n      })\n  })\n}\n"]}