'use strict';

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var requestPromise = _bluebird2.default.promisifyAll(require('request'));

module.exports = {
  importOne: importOne,
  exportOne: exportOne
};

function exportOne(categoryId, configurationPath, password) {
  var _this = this;

  return new _bluebird2.default(function (resolve, reject) {
    var options;
    try {
      options = {
        method: 'POST',
        agent: _this.config.agent,
        url: 'https://' + _this.config.hostname + '/vco/api/configurations/',
        headers: {
          'cache-control': 'no-cache',
          'authorization': 'Basic ' + new Buffer(_this.config.username + ':' + password).toString('base64')
        },
        qs: {
          categoryId: categoryId
        },
        formData: { file: _fs2.default.createReadStream(configurationPath) },
        json: true
      };
    } catch (error) {
      return reject(error);
    }

    requestPromise.postAsync(options).then(function (response) {
      return resolve(response);
    }).catch(function (error) {
      reject(error);
    });
  });
}

function importOne(configurationId, password) {
  var _this = this;

  return new _bluebird2.default(function (resolve, reject) {
    var options;

    options = {
      method: 'GET',
      agent: _this.config.agent,
      url: 'https://' + _this.config.hostname + '/vco/api/configurations/' + configurationId,
      headers: {
        'cache-control': 'no-cache',
        'authorization': 'Basic ' + new Buffer(_this.config.username + ':' + password).toString('base64'),
        'accept': 'application/vcoobject+xml'
      },
      encoding: 'utf-8'
    };

    requestPromise.getAsync(options).then(function (response) {
      return resolve(response);
    }).catch(function (error) {
      reject(error);
    });
  });
}
//# sourceMappingURL=configurations.js.map