{"version":3,"sources":["../../src/vro/workflows.js"],"names":["requestPromise","promisifyAll","require","module","exports","importOne","exportOne","categoryId","workflowPath","password","_this","resolve","reject","options","method","agent","config","url","hostname","headers","Buffer","username","toString","qs","overwrite","formData","file","createReadStream","json","error","postAsync","then","response","catch","workflowId","encoding","getAsync"],"mappings":";;AAAA;;;;AACA;;;;;;AACA,IAAIA,iBAAiB,mBAAQC,YAAR,CAAqBC,QAAQ,SAAR,CAArB,CAArB;;AAEAC,OAAOC,OAAP,GAAiB;AACfC,aAAWA,SADI;AAEfC,aAAWA;AAFI,CAAjB;;AAKA,SAASA,SAAT,CAAoBC,UAApB,EAAgCC,YAAhC,EAA8CC,QAA9C,EAAwD;AACtD,MAAIC,QAAQ,IAAZ;;AAEA,SAAO,uBAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,OAAJ;AACA,QAAI;AACFA,gBAAU;AACRC,gBAAQ,MADA;AAERC,eAAOL,MAAMM,MAAN,CAAaD,KAFZ;AAGRE,0BAAgBP,MAAMM,MAAN,CAAaE,QAA7B,wBAHQ;AAIRC,iBAAS;AACP,2BAAiB,UADV;AAEP,2BAAiB,WAAW,IAAIC,MAAJ,CAAWV,MAAMM,MAAN,CAAaK,QAAb,GAAwB,GAAxB,GAA8BZ,QAAzC,EAAmDa,QAAnD,CAA4D,QAA5D;AAFrB,SAJD;AAQRC,YAAI;AACFhB,sBAAYA,UADV;AAEFiB,qBAAW;AAFT,SARI;AAYRC,kBAAU,EAACC,MAAM,aAAGC,gBAAH,CAAoBnB,YAApB,CAAP,EAZF;AAaRoB,cAAM;AAbE,OAAV;AAeD,KAhBD,CAgBE,OAAOC,KAAP,EAAc;AACd,aAAOjB,OAAOiB,KAAP,CAAP;AACD;;AAED7B,mBAAe8B,SAAf,CAAyBjB,OAAzB,EACGkB,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxB,aAAOrB,QAAQqB,QAAR,CAAP;AACD,KAHH,EAIGC,KAJH,CAIS,UAAUJ,KAAV,EAAiB;AACtBjB,aAAOiB,KAAP;AACD,KANH;AAOD,GA7BM,CAAP;AA8BD;;AAED,SAASxB,SAAT,CAAoB6B,UAApB,EAAgCzB,QAAhC,EAA0C;AACxC,MAAIC,QAAQ,IAAZ;;AAEA,SAAO,uBAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,OAAJ;;AAEAA,cAAU;AACRC,cAAQ,KADA;AAERC,aAAOL,MAAMM,MAAN,CAAaD,KAFZ;AAGRE,wBAAgBP,MAAMM,MAAN,CAAaE,QAA7B,2BAA2DgB,UAHnD;AAIRf,eAAS;AACP,yBAAiB,UADV;AAEP,yBAAiB,WAAW,IAAIC,MAAJ,CAAWV,MAAMM,MAAN,CAAaK,QAAb,GAAwB,GAAxB,GAA8BZ,QAAzC,EAAmDa,QAAnD,CAA4D,QAA5D,CAFrB;AAGP,kBAAU;AAHH,OAJD;AASRa,gBAAU;AATF,KAAV;;AAYAnC,mBAAeoC,QAAf,CAAwBvB,OAAxB,EACGkB,IADH,CACQ,UAAUC,QAAV,EAAoB;AACxB,aAAOrB,QAAQqB,QAAR,CAAP;AACD,KAHH,EAIGC,KAJH,CAIS,UAAUJ,KAAV,EAAiB;AACtBjB,aAAOiB,KAAP;AACD,KANH;AAOD,GAtBM,CAAP;AAuBD","file":"workflows.js","sourcesContent":["import fs from 'fs'\nimport Promise from 'bluebird'\nvar requestPromise = Promise.promisifyAll(require('request'))\n\nmodule.exports = {\n  importOne: importOne,\n  exportOne: exportOne\n}\n\nfunction exportOne (categoryId, workflowPath, password) {\n  var _this = this\n\n  return new Promise(function (resolve, reject) {\n    var options\n    try {\n      options = {\n        method: 'POST',\n        agent: _this.config.agent,\n        url: `https://${_this.config.hostname}/vco/api/workflows/`,\n        headers: {\n          'cache-control': 'no-cache',\n          'authorization': 'Basic ' + new Buffer(_this.config.username + ':' + password).toString('base64')\n        },\n        qs: {\n          categoryId: categoryId,\n          overwrite: true\n        },\n        formData: {file: fs.createReadStream(workflowPath)},\n        json: true\n      }\n    } catch (error) {\n      return reject(error)\n    }\n\n    requestPromise.postAsync(options)\n      .then(function (response) {\n        return resolve(response)\n      })\n      .catch(function (error) {\n        reject(error)\n      })\n  })\n}\n\nfunction importOne (workflowId, password) {\n  var _this = this\n\n  return new Promise(function (resolve, reject) {\n    var options\n\n    options = {\n      method: 'GET',\n      agent: _this.config.agent,\n      url: `https://${_this.config.hostname}/vco/api/workflows/${workflowId}`,\n      headers: {\n        'cache-control': 'no-cache',\n        'authorization': 'Basic ' + new Buffer(_this.config.username + ':' + password).toString('base64'),\n        'accept': 'application/zip'\n      },\n      encoding: null\n    }\n\n    requestPromise.getAsync(options)\n      .then(function (response) {\n        return resolve(response)\n      })\n      .catch(function (error) {\n        reject(error)\n      })\n  })\n}\n"]}